{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-content class=\\\"login-content\\\" padding>\\r\\n  <ion-row>\\r\\n      <ion-col>\\r\\n        <h1 class=\\\"logo\\\" [routerLink]=\\\"['/home']\\\">\\r\\n          <ion-label color=\\\"primary\\\">\\r\\n              FAMILY APP\\r\\n              <img src=\\\"/assets/icon/family-icon.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\r\\n\\r\\n          </ion-label>\\r\\n        </h1>      \\r\\n        <p class=\\\"description\\\">A Project by <a href=\\\"https://davidduckwitz.de\\\" target=\\\"_blank\\\">David Duckwitz & Arina ;)</a></p>\\r\\n      </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-list style=\\\"border: 1px solid lightgrey;\\\">\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n              <ion-input type=\\\"text\\\" #email></ion-input>\\r\\n            </ion-item>          \\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n              <ion-input type=\\\"password\\\" #pass></ion-input>\\r\\n            </ion-item>          \\r\\n          </ion-list>\\r\\n          <ion-col>\\r\\n              <ion-button class=\\\"log-in-button\\\" color=\\\"dark\\\" (click)=\\\"loginV1(this.email.value, this.pass.value)\\\">Login</ion-button>             \\r\\n          </ion-col>\\r\\n          <ion-col>              \\r\\n              <ion-button class=\\\"log-in-button\\\" color=\\\"light\\\" [routerLink]=\\\"['/register']\\\">SIGN UP</ion-button>\\r\\n          </ion-col> \\r\\n          <ion-col>              \\r\\n            <ion-button class=\\\"log-in-button\\\" color=\\\"light\\\" (click)=\\\"devloginV1('davidduckwitz@gmail.com','123456')\\\">DEV LOGIN</ion-button>\\r\\n        </ion-col>      \\r\\n       \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>  \\r\\n    <ion-col>\\r\\n      <ion-button class=\\\"log-in-button\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"doGoogleLogin()\\\">\\r\\n        LOG IN WITH GOOGLE\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n   \\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\"","module.exports = \".login-content {\\n  --background: white; }\\n\\n.logo {\\n  color: black;\\n  font-size: 64px;\\n  font-weight: bold;\\n  text-align: center;\\n  padding-top: 50px; }\\n\\n.description {\\n  color: black;\\n  font-size: 22px;\\n  text-align: center; }\\n\\n.log-in-button {\\n  margin-top: 40px;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRzpcXGFuZHJvaWRcXGZhbWlseV9uZXcvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBYSxFQUFBOztBQUdmO0VBQ0UsWUFBWTtFQUNaLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRlbnR7XHJcbiAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcclxufVxyXG5cclxuLmxvZ28ge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBmb250LXNpemU6IDY0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmctdG9wOiA1MHB4O1xyXG59XHJcblxyXG4uZGVzY3JpcHRpb24ge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBmb250LXNpemU6IDIycHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubG9nLWluLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogNDBweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuIl19 */\"","import { Component } from '@angular/core';\r\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\r\nimport { LoadingController, AlertController, Platform } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage {\r\n\r\n  constructor(\r\n    private googlePlus: GooglePlus,\r\n    public loadingController: LoadingController,\r\n    private router: Router,\r\n    private platform: Platform,\r\n    public alertController: AlertController,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  async doGoogleLogin() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Please wait...'\r\n    });\r\n    this.presentLoading(loading);\r\n    this.googlePlus.login({\r\n      'scopes': '', // optional - space-separated list of scopes, If not defaults to `profile` and `email`.\r\n      'webClientId': environment.googleWebClientId, // optional - clientId of your Web application from Credentials settings of your project - On Android, this MUST be included to get an idToken. On iOS, it is not required.\r\n      'offline': true, // Optional, but requires the webClientId - if set to true the plugin will also return a serverAuthCode, which can be used to grant offline access to a non-Google server\r\n      })\r\n      .then(user => {\r\n        // save user data on the native storage\r\n         const loadeduser = {\r\n          name: user.displayName,\r\n          email: user.email,\r\n          picture: user.imageUrl\r\n        };\r\n        this.authenticationService.setUser(loadeduser);\r\n        this.router.navigate(['/user']);\r\n        loading.dismiss();\r\n      }, err => {\r\n        console.log(err);\r\n        if (!this.platform.is('cordova')) {\r\n          this.presentAlert('success', 'Cordova kann im Browser nicht geladen werden');\r\n        }\r\n        loading.dismiss();\r\n      });\r\n  }\r\n\r\n  loginV1(email: string, password: string) {\r\n    console.log(email, password);\r\n    this.authenticationService.loginV1(email, password)\r\n      .subscribe(response => {\r\n\r\n        if (response['status'] === 1) {\r\n          this.presentAlert('Success', response['message']);\r\n          const user = {\r\n            name: response['username'],\r\n            firstname: response['firstname'],\r\n            lastname: response['firstname'],\r\n            email: response['email'],\r\n            image: response['image'],\r\n            userid: response['userid']\r\n          };\r\n            // this.presentAlert('success', 'Cordova kann im Browser nicht geladen werden');\r\n            this.authenticationService.setUser(user);\r\n            this.router.navigate(['/user']);\r\n        } else {\r\n        this.presentAlert('Danger', response['message']);\r\n        }\r\n      }, error => {\r\n        console.log(error.status);\r\n        this.presentAlert('Danger', error.status);\r\n      });\r\n  }\r\n\r\n  devloginV1(email: string, password: string) {\r\n    this.loginV1(email, password);\r\n    this.router.navigate(['/user']);\r\n  }\r\n\r\n  async presentAlert(title: string, content: string) {\r\n    const alert = await this.alertController.create({\r\n    header: title,\r\n        message: content,\r\n        buttons: ['OK']\r\n      });\r\n      await alert.present();\r\n    }\r\n\r\n  async presentLoading(loading) {\r\n    return await loading.present();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}