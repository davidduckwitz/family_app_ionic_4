{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-content class=\\\"login-content\\\" padding>\\n  <ion-row>\\n      <ion-col>\\n        <h1 class=\\\"logo\\\" [routerLink]=\\\"['/home']\\\">FAMILY APP</h1>      \\n        <p class=\\\"description\\\">A Project by <a href=\\\"https://davidduckwitz.de\\\" target=\\\"_blank\\\">David Duckwitz & Arina ;)</a></p>\\n      </ion-col>\\n  </ion-row>\\n  <ion-row>\\n      <ion-col>\\n        <ion-list style=\\\"border: 1px solid lightgrey;\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Email</ion-label>\\n              <ion-input type=\\\"text\\\" #email></ion-input>\\n            </ion-item>          \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input type=\\\"password\\\" #pass></ion-input>\\n            </ion-item>          \\n          </ion-list>\\n          <ion-col>\\n              <ion-button class=\\\"log-in-button\\\" color=\\\"dark\\\" (click)=\\\"loginV1(this.email.value, this.pass.value)\\\">Login</ion-button>             \\n          </ion-col>\\n          <ion-col>              \\n              <ion-button class=\\\"log-in-button\\\" color=\\\"light\\\" [routerLink]=\\\"['/register']\\\">SIGN UP</ion-button>\\n          </ion-col> \\n          <ion-col>              \\n            <ion-button class=\\\"log-in-button\\\" color=\\\"light\\\" (click)=\\\"devloginV1('davidduckwitz@gmail.com','123456')\\\">DEV LOGIN</ion-button>\\n        </ion-col>      \\n       \\n      </ion-col>\\n    </ion-row>\\n    <ion-row>  \\n    <ion-col>\\n      <ion-button class=\\\"log-in-button\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"doGoogleLogin()\\\">\\n        LOG IN WITH GOOGLE\\n      </ion-button>\\n    </ion-col>\\n   \\n  </ion-row>\\n</ion-content>\\n\"","module.exports = \".login-content {\\n  --background: white; }\\n\\n.logo {\\n  color: black;\\n  font-size: 64px;\\n  font-weight: bold;\\n  text-align: center;\\n  padding-top: 50px; }\\n\\n.description {\\n  color: black;\\n  font-size: 22px;\\n  text-align: center; }\\n\\n.log-in-button {\\n  margin-top: 40px;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRzpcXGFuZHJvaWRcXGZhbWlseV9hcHBfaW9uaWNfNC9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFhLEVBQUE7O0FBR2Y7RUFDRSxZQUFZO0VBQ1osZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsWUFBWTtFQUNaLGVBQWU7RUFDZixrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGVudHtcbiAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxuLmxvZ28ge1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogNjRweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy10b3A6IDUwcHg7XG59XG5cbi5kZXNjcmlwdGlvbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1zaXplOiAyMnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5sb2ctaW4tYnV0dG9uIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iXX0= */\"","import { Component } from '@angular/core';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { LoadingController, AlertController, Platform } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n\n  constructor(\n    private googlePlus: GooglePlus,\n    private nativeStorage: NativeStorage,\n    public loadingController: LoadingController,\n    private router: Router,\n    private platform: Platform,\n    public alertController: AlertController,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  async doGoogleLogin() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...'\n    });\n    this.presentLoading(loading);\n    this.googlePlus.login({\n      'scopes': '', // optional - space-separated list of scopes, If not defaults to `profile` and `email`.\n      'webClientId': environment.googleWebClientId, // optional - clientId of your Web application from Credentials settings of your project - On Android, this MUST be included to get an idToken. On iOS, it is not required.\n      'offline': true, // Optional, but requires the webClientId - if set to true the plugin will also return a serverAuthCode, which can be used to grant offline access to a non-Google server\n      })\n      .then(user => {\n        // save user data on the native storage\n         const loadeduser = {\n          name: user.displayName,\n          email: user.email,\n          picture: user.imageUrl\n        };\n        this.authenticationService.setUser(loadeduser);\n        this.router.navigate(['/user']);\n        loading.dismiss();\n      }, err => {\n        console.log(err);\n        if (!this.platform.is('cordova')) {\n          this.presentAlert('success', 'Cordova kann im Browser nicht geladen werden');\n        }\n        loading.dismiss();\n      });\n  }\n\n  loginV1(email: string, password: string) {\n    console.log(email, password);\n    this.authenticationService.loginV1(email, password)\n      .subscribe(response => {\n\n        if (response['status'] === 1) {\n          console.log(response['message']);\n          this.presentAlert('Success', response['message']);\n          const user = {\n            name: response['username'],\n            firstname: response['firstname'],\n            lastname: response['firstname'],\n            email: response['email'],\n            image: response['image'],\n            userid: response['userid']\n          };\n            // this.presentAlert('success', 'Cordova kann im Browser nicht geladen werden');\n            this.authenticationService.setUser(user);\n            this.router.navigate(['/user']);\n        } else {\n        console.log(response['message']);\n        this.presentAlert('Danger', response['message']);\n        }\n      }, error => {\n        console.log(error.status);\n        this.presentAlert('Danger', error.status);\n      });\n  }\n\n  devloginV1(email: string, password: string) {\n    console.log(email, password);\n    this.loginV1(email, password);\n    this.router.navigate(['/user']);\n  }\n\n  async presentAlert(title: string, content: string) {\n    const alert = await this.alertController.create({\n    header: title,\n        message: content,\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n\n  async presentLoading(loading) {\n    return await loading.present();\n  }\n\n  async login() {\n    console.log('Login');\n    this.router.navigate(['/user']);\n  }\n\n}\n"],"sourceRoot":""}